[gd_resource type="VisualShader" load_steps=8 format=2]

[ext_resource path="res://textures/Rampe.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
output_port_for_preview = 0
uniform_name = "Color"
texture_type = 1

[sub_resource type="VisualShaderNodeColorFunc" id=4]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=5]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
output_port_for_preview = 0
function = 31

[sub_resource type="VisualShaderNodeVec3Constant" id=7]
constant = Vector3( 1, 1, 1 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 1 )

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D Color : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(Color, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Vector:6
	vec3 n_out6p0 = vec3(1.000000, 1.000000, 1.000000);

// ColorFunc:3
	vec3 n_out3p0;
	{
		vec3 c = n_out2p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		float max3 = max(max1, max2);
		n_out3p0 = vec3(max3, max3, max3);
	}

// ScalarOp:4
	float n_in4p1 = 2.00000;
	float n_out4p0 = pow(dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)), n_in4p1);

// ScalarFunc:5
	float n_out5p0 = 1.0 - n_out4p0;

// Output:0
	ALBEDO = n_out2p0;
	METALLIC = dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333));
	ROUGHNESS = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1545.63, 40.9315 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -820, 80 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -360, 340 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( -140, 360 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 80, 360 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( -40, 200 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( -960, 100 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 7, 0, 3, 0, 7, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 7, 0, 3, 0, 7, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 2, 0, 3, 0, 2, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 2, 0, 3, 0, 2, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 7, 0, 3, 0, 7, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 7, 0, 3, 0, 7, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 2, 0, 3, 0, 2, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 7, 0, 3, 0, 7, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 7, 0, 3, 0, 7, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 2, 0, 3, 0, 2, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 2, 0, 3, 0, 2, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 7, 0, 3, 0, 7, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 7, 0, 3, 0, 7, 0, 0, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 3, 6, 0, 0, 2, 2, 0, 3, 0, 2, 0, 0, 0 )
